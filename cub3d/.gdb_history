run
p x
p y
exit
exit
run
run
exit
run
quit
b draw_line 
c
start
c
n
p x
n
exit
start
b draw_line 
c
n
p angle
make
start
c
n
make
exit
start
b draw_line
c
n
n
n
exit
make
c
start
c
n
quit
run
exi
run
exit
run
exit
run
make
exit
b draw_line 
c
start
c
n
make
c
run
exit
b draw_line n
b draw_line 
c
start
n
c
n
make
run
exit
run
p data->addr
p data->s
p data->win
make
run
p x
p y
make
exit
b my_mlx_pixel_put 
c
start
c
p data->addr
n
p dst
p color
n
n
p color
n
n
run
c
c
c
c
delete
c
start
c
run
exit
b update
c
star
start
c
c
n
n
n
n
exit
b update
c
start
c
p d->gdata->p->move_speed 
n
exit
run
exit
start
b init_player 
c
n
n
p data->p->x
exit
run
exit
b draw_ray
start
b draw_rays
c
n
rays[0].
p rays[0].angle
p rays[0].is_down 
n
n
p y_intercept 
n
p y_intercept 
n
p x_intercept 
n
p y_step
p ystep
p xstep
n
p ystep
start
c
n
p ystep
make
c
make
c
start
c
n
p x_step
p xstep
n
p xstep
n
p xstep
exit
run
q
run
p map[y_intercept/ T_SIZE]
p d->gdata->map[y_intercept/ T_SIZE]
exit
run
quit
run
exit
run
exit
run
exit
run
exit
run
make
exit
run
make
exit
run
p x
p y
exit
run
exit
run
exit
run
p data->img 
exit
run
exit
run
p x
p y
exit
run
exit
run
exit
run
exit
run
exit
b calc_rays 
c
start
c
n
p rays
p rays[0].angle
p rays[640].angle
p rays[641].angle
p rays[645].angle
p rays[745].angle
p rays[945].angle
n
n
exit
make
exit
delete
clear
b 189
c
p dst_vrt
p dst_vert
p distance
p rays 
p rays[col_id].column_id 
exit
run
p data->bits_per_pixel
p data->line_length 
p dst
exit
run
exit
rub
run
exit
